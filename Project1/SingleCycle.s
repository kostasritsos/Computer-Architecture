#define zero    $0
#define at      $1
#define v0      $2
#define v1      $3
#define a0      $4
#define a1      $5
#define a2      $6
#define a3      $7

#define t0      $8
#define t1      $9
#define t2      $10
#define t3      $11
#define t4      $12
#define t5      $13
#define t6      $14
#define t7      $15
#define t8      $24
#define t9      $25
#define k0      $26
#define k1      $27

#define s0      $16
#define s1      $17
#define s2      $18
#define s3      $19
#define s4      $20
#define s5      $21
#define s6      $22
#define s7      $23

#define gp      $28
#define sp      $29
#define fp      $30
#define ra      $31
.text
.globl _start
.set noat
.set noreorder
.ent _start

_start:
	la $s0,Array1
	#la $s0,Array2
	#la $s0,Array3
	la $s3,odd
	la $s4,even
	la $s5,zero
	la $s6,div3
	la $s7,div5
	la $t0,Size1
	#la $t0,Size2
	#la $t0,Size3
	lw $s1,0($s0) 		#min
	lw $s2,0($s0)		#max
	lw $s3,0($s3)		#zero counter
	lw $s4,0($s4)		#odd counter
	lw $s5,0($s5)		#even counter
	lw $s6,0($s6)		#div3 counter
	lw $s7,0($s7)		#div5 counter
	lw $t0,0($t0)		#loop counter
	addi $t1, $t1, 1
	addi $t3, $t3, 3 
	addi $t5, $t5, 5
	addi $t9,$t0,0
	
loop:
	
	lw $t6, 0($s0) 			#load number from array
	
Min:
	
	slt $t2, $t6, $s1 		#t2 will be 1 if number<min,else 0
	beq $t2, $zero,Max 		#if t2==0 check if the number is greater than the max
	lw $s1,0($s0)			#min=number
	j Odd_Even
	
Max:
	
	slt $t4, $s2,$t6		#t4 will be 1 if number>max,else 0
	beq $t4, $zero,Odd_Even #if t4 is zero then number>max so we have a new max
	lw $s2,0($s0)			#max=number

Odd_Even:
	
	andi $t8, $t6, 1 		#If bitwise AND (number & 1) will return 1 if number is odd,zero if even
	beq $t8, $t1,Div3_5 	#If t8==1 then it is Odd else go check div3 and div5.There is no point examine if number==0 as zero is an odd number.
	addi $s4,$s4,1 			#odd counter++

Zeroes:

	bne $t6, $zero, Div3_5	#If number==0  increase the zeroes,div3,div5 counter
	addi $s3, $s3, 1 		#zeroes counter++
	addi $s6, $s6, 1 		#Div3 counter++
	addi $s7, $s7, 1 		#Div5 counter++
	j Go_next
	
Div3_5:

	lw $t7, 0 ($s0) 		#load number from array
	div $t7,$t3				#divide number with 3	
	mfhi $t7				#the HI special register will hold the remainder of the division
	div $t6,$t5 			#divide number with 5
	mfhi $t6				#the HI special register will hold the remainder of the division

Div3:	
	
	bne $t7, $zero, Div5	#If remainder is zero increase Div 3 counter else go to Div5
	addi $s6,$s6,1 			#div3 counter++

Div5:
	
	bne $t6, $zero, Go_next #If remainder is zero increase Div 5 counter
	addi $s7,$s7,1 			#div5 counter++

Go_next:
	
	addi $t0, $t0, -1		#decrease by one the loop counter
	addi $s0,$s0,4			#go to next number of the array
	bne $t0, $zero,loop 	#If (t0==Array_Size) exit
	
Exit:

	sub $s5,$t9,$s4			#even numbers=total numbers-odd numbers so we do the subtract 
 	break					



.end _start

.data
.org 10000000
min: .space 8
max: .space 8
even: .word 0
odd: .word 0
zero: .word 0
div3: .word 0
div5: .word 0
Size1: .word 100
Size2: .word 200
Size3: .word 500
Array1: .word  255,266,641,-34,519,-230,78,353,144,152,-206,790,952,197,439,876,-615,350,-230,-892,-410,654,-913,-371,523,57,-616,787,-810,625,631,194,456,-664,782,-704,-491,723,-618,-420,355,-252,-14,146,-645,206,891,-236,782,3,472,999,-170,-266,281,-7,583,-637,554,464,-704,-964,962,870,-831,-775,53,-817,386,929,-268,750,142,-361,648,580,-369,924,-775,454,-212,728,0,-662,241,200,694,-728,11,-950,-492,-17,538,-371,-771,427,-865,-998,333,88
Array2: .word 0,861,212,132,-539,44,-667,-547,-694,803,-699,782,777,-696,223,608,378,515,940,-488,33,-998,-454,-471,749,-278,493,-225,-588,-13,-772,-341,232,931,-155,-136,294,-465,252,-244,-17,337,94,-238,332,906,-173,659,-91,0,-899,20,-498,868,972,130,76,-11,-469,593,-1000,739,-65,-966,-701,649,-550,-623,20,-732,727,-426,-853,-889,-574,512,975,-682,-968,-384,329,-213,-209,281,-672,-287,77,-978,454,101,30,142,198,481,-552,594,720,-607,-124,705,-280,913,911,291,-783,-151,-184,-420,-226,439,703,280,-13,-268,-916,-866,605,-907,-782,205,896,502,-499,133,-722,-743,-347,-665,472,532,-1,707,275,745,342,-608,786,-590,345,558,333,997,183,-401,-774,-491,-546,675,-604,-50,-134,947,-131,249,-106,-832,-435,84,4,-962,490,964,336,819,-786,-36,-705,897,-324,1000,-537,-242,174,327,565,-675,182,-158,951,511,495,-877,468,598,273,-959,162,969,328,-791,322,160,101,-150,817,-398,694,-673,-335,-51

Array3: .word -7911,-3153,-6498,-9366,-87,-61,-2862,-4130,-5373,-7736,6775,-6642,6374,6150,1752,9640,-4385,3817,7999,-7390,-4961,3610,-6148,7481,5454,3761,-1515,9746,6969,-9944,-2660,3511,2463,-3790,-5498,6918,-9189,9749,-1770,8643,1962,538,-3426,2290,-6283,-8971,-7365,6960,-4342,-2121,7520,-9268,6599,6856,-9029,7407,-5342,6444,-8955,8349,2262,8990,-8798,7958,7841,-4853,-1452,3768,1057,-4617,-7065,4558,2199,9780,-3854,-6985,-1442,-5182,-8517,7306,-1626,3063,-742,7,3917,6969,-8666,352,-3895,7013,1683,5002,-3078,-1848,-7645,-7357,-9245,100000,-100000,5072,-7805,-4570,6254,-9887,-795,-7854,-1541,-5506,-874,-5396,7244,-1414,801,7733,6300,7630,8827,-9386,5865,4086,-7819,7696,-3033,3353,9554,295,-7180,-2797,884,-7232,6480,1254,-1879,-673,-3495,903,4464,-7375,-1096,-7918,-7422,4438,3187,-2433,-8593,-5096,8002,4026,94,-2560,7170,8159,-488,1593,-5838,-2670,-8553,7886,4611,-9704,-9237,4971,-6422,3525,-7602,-8542,4583,7630,1285,-2703,-2249,-4783,-2612,3369,4560,4105,-8704,8593,-3237,-4609,5955,-4040,1002,-1518,-1662,-1167,-7676,-7470,8775,9055,6798,-1026,-581,8212,-2628,7330,-7068,2436,4490,5459,9349,-9665,-3734,1852,-9941,-641,7685,-8103,8215,-6219,9680,6030,-3960,-2041,8859,-792,-9858,7652,0,4664,5391,-171,-1433,-5156,6174,-8112,-9774,6176,-3052,5457,-1539,-9676,-1557,5310,-3613,597,-3694,-377,-44,572,1072,6962,1459,-4697,-9586,1647,-7628,3936,-146,5544,-9922,7240,-6867,7726,-1940,6936,-6278,2625,6089,-9532,2742,-3273,-5500,-7148,7318,7154,2329,1154,-6982,2350,8595,6861,-1322,-4630,-8039,-242,2279,-3244,904,8143,-6575,-7553,2508,1154,1589,-9566,-4068,9157,797,605,-7065,-8138,6368,-5182,-3101,9528,7584,7753,5896,6806,-4461,-7898,-6435,1514,5873,9516,-8018,-3850,8065,6209,2976,-3861,-4445,-2539,-7429,-5413,-2730,-6469,-2311,9267,-235,-9587,7075,6023,-9028,-119,-3144,-229,7986,7492,1611,-4998,-5862,-1922,-9176,-4667,2774,-695,-8582,-984,-1354,-276,-7991,-667,4249,-7377,-8625,-3637,-1104,6459,8326,-6578,2507,4693,4338,-3305,-8187,-3665,-217,777,-7314,4653,-6739,8637,7808,-2229,8698,-9150,-9717,8647,-4865,9041,-770,-2967,244,-6834,-8013,9073,-1063,-941,3852,95,-8661,6468,4388,6385,-283,1540,3853,5182,5793,-6359,-969,7760,-902,-9372,-9218,-4390,-3701,9166,-8578,990,8308,9438,2332,5595,1347,-8745,6622,7159,-9344,-6455,9104,-4577,-4933,-2982,4031,5660,-4482,-6672,-7881,-9187,927,8292,-5768,-7854,-9357,7620,6536,-703,1013,-7896,-4442,-9561,7161,2401,2988,5025,-5046,-3362,7230,-9704,-8028,-4324,-6545,563,951,-8528,-1256,5034,-7200,3125,453,5964,6389,777,-3659,9433,4931,-1232,636,-6646,-4953,4362,3306,-6790,-3833,1517,-6665,7529,-1428,8452,7478,-3893,-881,-4737,-7363,-9572,-38,4643,-8223,-5194,841,-5048,418,-8243,3855,-513,2243,-4399,-7446,1530,-826,7546,-8401,2115,7140,-8095,491,-7017
